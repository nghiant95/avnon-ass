{"ast":null,"code":"import { createAction, props, on, createReducer, createSelector, createFeatureSelector } from '@ngrx/store';\nimport { produce } from 'immer';\n\nfunction createSliceActions(featureName, sliceActionNameGetter, reducers, reducersToActions) {\n  const actions = {};\n  actions['noop'] = createAction(reducersToActions?.['noop'] || sliceActionNameGetter(featureName, 'noop effect'), props());\n\n  for (const [reducerKey, reducerValue] of Object.entries(reducers)) {\n    const typeOfReducer = typeof reducerValue;\n    const sliceActionName = reducersToActions?.[reducerKey] || sliceActionNameGetter(featureName, reducerKey);\n\n    if (typeOfReducer === 'function') {\n      actions[reducerKey] = createAction(sliceActionName, props());\n      continue;\n    }\n\n    actions[reducerKey] = {};\n    Object.keys(reducerValue).forEach(asyncKey => {\n      actions[reducerKey][asyncKey] = createAction(`${sliceActionName} ${asyncKey}`, props());\n    });\n  }\n\n  return actions;\n}\n\nfunction createSliceReducer(initialState, actions, reducers, extraReducers) {\n  const reducerArgs = [];\n  const extra = extraReducers || [];\n\n  for (const [reducerKey, reducer] of Object.entries(reducers)) {\n    const typeOfReducer = typeof reducer;\n\n    if (typeOfReducer === 'function') {\n      reducerArgs.push(on(actions[reducerKey], (state, payload) => produce(state, draft => reducer(draft, payload))));\n      continue;\n    }\n\n    Object.keys(reducer).forEach(asyncKey => {\n      const asyncReducer = reducer[asyncKey];\n      reducerArgs.push(on(actions[reducerKey][asyncKey], (state, payload) => produce(state, draft => asyncReducer(draft, payload))));\n    });\n  }\n\n  return createReducer(initialState, ...reducerArgs.concat(extra));\n}\n\nfunction isDictionary(arg) {\n  return typeof arg === 'object' && arg !== null && !Array.isArray(arg) && !(arg instanceof Date);\n}\n\nconst STRING_CAMELIZE_REGEXP = /(-|_|\\.|\\s)+(.)?/g;\n/**\n Returns the lowerCamelCase form of a string.\n ```javascript\n camelize('innerHTML');          // 'innerHTML'\n camelize('action_name');        // 'actionName'\n camelize('css-class-name');     // 'cssClassName'\n camelize('my favorite items');  // 'myFavoriteItems'\n camelize('My Favorite Items');  // 'myFavoriteItems'\n ```\n @method camelize\n @param {String} str The string to camelize.\n @return {String} the camelized string.\n */\n\nfunction camelize(str) {\n  return str.replace(STRING_CAMELIZE_REGEXP, (_match, _separator, chr) => {\n    return chr ? chr.toUpperCase() : '';\n  }).replace(/^([A-Z])/, match => match.toLowerCase());\n}\n/**\n Returns the UpperCamelCase form of a string.\n ```javascript\n 'innerHTML'.classify();          // 'InnerHTML'\n 'action_name'.classify();        // 'ActionName'\n 'css-class-name'.classify();     // 'CssClassName'\n 'my favorite items'.classify();  // 'MyFavoriteItems'\n ```\n @method classify\n @param {String} str the string to classify\n @return {String} the classified string\n */\n\n\nfunction classify(str) {\n  return str.split('.').map(part => capitalize(camelize(part))).join('.');\n}\n/**\n Returns the Capitalized form of a string\n ```javascript\n 'innerHTML'.capitalize()         // 'InnerHTML'\n 'action_name'.capitalize()       // 'Action_name'\n 'css-class-name'.capitalize()    // 'Css-class-name'\n 'my favorite items'.capitalize() // 'My favorite items'\n ```\n @method capitalize\n @param {String} str The string to capitalize.\n @return {String} The capitalized string.\n */\n\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nfunction createSliceSelectors(initialState, featureSelector) {\n  const nestedKeys = isDictionary(initialState) ? Object.keys(initialState) : [];\n  return nestedKeys.reduce((nestedSelectors, nestedKey) => ({ ...nestedSelectors,\n    [`select${classify(nestedKey)}`]: createSelector(featureSelector, parentState => parentState[nestedKey])\n  }), {});\n}\n\nfunction defaultSliceActionNameGetter(featureName, actionName) {\n  return `[${classify(featureName)}] ${actionName}`;\n}\n\nfunction noopReducer() {\n  return () => {};\n}\n\nfunction createSlice({\n  name,\n  initialState,\n  reducers,\n  extraReducers,\n  reducersToActions,\n  sliceActionNameGetter = defaultSliceActionNameGetter\n}) {\n  const featureSelector = createFeatureSelector(name);\n  const nestedSelectors = createSliceSelectors(initialState, featureSelector);\n  const actions = createSliceActions(name, sliceActionNameGetter, reducers, reducersToActions);\n  const reducer = createSliceReducer(initialState, actions, reducers, extraReducers);\n  return {\n    name,\n    reducer,\n    actions,\n    selectors: {\n      [`select${classify(name)}State`]: featureSelector,\n      ...nestedSelectors\n    }\n  };\n}\n\nfunction createNamespacedSlice({\n  name,\n  initialState,\n  reducers,\n  extraReducers,\n  reducersToActions,\n  sliceActionNameGetter = defaultSliceActionNameGetter\n}) {\n  const {\n    name: sliceName,\n    reducer,\n    selectors,\n    actions\n  } = createSlice({\n    name,\n    initialState,\n    reducers,\n    extraReducers,\n    reducersToActions,\n    sliceActionNameGetter\n  });\n  const classifiedName = classify(name);\n  return {\n    [`${classifiedName}Feature`]: {\n      name: sliceName,\n      reducer\n    },\n    [`${classifiedName}Actions`]: actions,\n    [`${classifiedName}Selectors`]: selectors\n  };\n}\n/*\n * Public API Surface of ngrx-slice\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { createNamespacedSlice, createSlice, noopReducer };","map":{"version":3,"names":["createAction","props","on","createReducer","createSelector","createFeatureSelector","produce","createSliceActions","featureName","sliceActionNameGetter","reducers","reducersToActions","actions","reducerKey","reducerValue","Object","entries","typeOfReducer","sliceActionName","keys","forEach","asyncKey","createSliceReducer","initialState","extraReducers","reducerArgs","extra","reducer","push","state","payload","draft","asyncReducer","concat","isDictionary","arg","Array","isArray","Date","STRING_CAMELIZE_REGEXP","camelize","str","replace","_match","_separator","chr","toUpperCase","match","toLowerCase","classify","split","map","part","capitalize","join","charAt","substring","createSliceSelectors","featureSelector","nestedKeys","reduce","nestedSelectors","nestedKey","parentState","defaultSliceActionNameGetter","actionName","noopReducer","createSlice","name","selectors","createNamespacedSlice","sliceName","classifiedName"],"sources":["/Volumes/Macintosh HD - Data/SourceCode/angular/avnon-ass/node_modules/ngrx-slice/fesm2022/ngrx-slice.mjs"],"sourcesContent":["import { createAction, props, on, createReducer, createSelector, createFeatureSelector } from '@ngrx/store';\nimport { produce } from 'immer';\n\nfunction createSliceActions(featureName, sliceActionNameGetter, reducers, reducersToActions) {\n    const actions = {};\n    actions['noop'] = createAction(reducersToActions?.['noop'] ||\n        sliceActionNameGetter(featureName, 'noop effect'), props());\n    for (const [reducerKey, reducerValue] of Object.entries(reducers)) {\n        const typeOfReducer = typeof reducerValue;\n        const sliceActionName = reducersToActions?.[reducerKey] ||\n            sliceActionNameGetter(featureName, reducerKey);\n        if (typeOfReducer === 'function') {\n            actions[reducerKey] = createAction(sliceActionName, props());\n            continue;\n        }\n        actions[reducerKey] = {};\n        Object.keys(reducerValue).forEach((asyncKey) => {\n            actions[reducerKey][asyncKey] =\n                createAction(`${sliceActionName} ${asyncKey}`, props());\n        });\n    }\n    return actions;\n}\n\nfunction createSliceReducer(initialState, actions, reducers, extraReducers) {\n    const reducerArgs = [];\n    const extra = (extraReducers || []);\n    for (const [reducerKey, reducer] of Object.entries(reducers)) {\n        const typeOfReducer = typeof reducer;\n        if (typeOfReducer === 'function') {\n            reducerArgs.push(on(actions[reducerKey], (state, payload) => produce(state, (draft) => reducer(draft, payload))));\n            continue;\n        }\n        Object.keys(reducer).forEach((asyncKey) => {\n            const asyncReducer = reducer[asyncKey];\n            reducerArgs.push(on(actions[reducerKey][asyncKey], (state, payload) => produce(state, (draft) => asyncReducer(draft, payload))));\n        });\n    }\n    return createReducer(initialState, ...reducerArgs.concat(extra));\n}\n\nfunction isDictionary(arg) {\n    return (typeof arg === 'object' &&\n        arg !== null &&\n        !Array.isArray(arg) &&\n        !(arg instanceof Date));\n}\n\nconst STRING_CAMELIZE_REGEXP = /(-|_|\\.|\\s)+(.)?/g;\n/**\n Returns the lowerCamelCase form of a string.\n ```javascript\n camelize('innerHTML');          // 'innerHTML'\n camelize('action_name');        // 'actionName'\n camelize('css-class-name');     // 'cssClassName'\n camelize('my favorite items');  // 'myFavoriteItems'\n camelize('My Favorite Items');  // 'myFavoriteItems'\n ```\n @method camelize\n @param {String} str The string to camelize.\n @return {String} the camelized string.\n */\nfunction camelize(str) {\n    return str\n        .replace(STRING_CAMELIZE_REGEXP, (_match, _separator, chr) => {\n        return chr ? chr.toUpperCase() : '';\n    })\n        .replace(/^([A-Z])/, (match) => match.toLowerCase());\n}\n/**\n Returns the UpperCamelCase form of a string.\n ```javascript\n 'innerHTML'.classify();          // 'InnerHTML'\n 'action_name'.classify();        // 'ActionName'\n 'css-class-name'.classify();     // 'CssClassName'\n 'my favorite items'.classify();  // 'MyFavoriteItems'\n ```\n @method classify\n @param {String} str the string to classify\n @return {String} the classified string\n */\nfunction classify(str) {\n    return str\n        .split('.')\n        .map((part) => capitalize(camelize(part)))\n        .join('.');\n}\n/**\n Returns the Capitalized form of a string\n ```javascript\n 'innerHTML'.capitalize()         // 'InnerHTML'\n 'action_name'.capitalize()       // 'Action_name'\n 'css-class-name'.capitalize()    // 'Css-class-name'\n 'my favorite items'.capitalize() // 'My favorite items'\n ```\n @method capitalize\n @param {String} str The string to capitalize.\n @return {String} The capitalized string.\n */\nfunction capitalize(str) {\n    return (str.charAt(0).toUpperCase() +\n        str.substring(1));\n}\n\nfunction createSliceSelectors(initialState, featureSelector) {\n    const nestedKeys = (isDictionary(initialState) ? Object.keys(initialState) : []);\n    return nestedKeys.reduce((nestedSelectors, nestedKey) => ({\n        ...nestedSelectors,\n        [`select${classify(nestedKey)}`]: createSelector(featureSelector, (parentState) => parentState[nestedKey]),\n    }), {});\n}\n\nfunction defaultSliceActionNameGetter(featureName, actionName) {\n    return `[${classify(featureName)}] ${actionName}`;\n}\nfunction noopReducer() {\n    return (() => { });\n}\nfunction createSlice({ name, initialState, reducers, extraReducers, reducersToActions, sliceActionNameGetter = defaultSliceActionNameGetter, }) {\n    const featureSelector = createFeatureSelector(name);\n    const nestedSelectors = createSliceSelectors(initialState, featureSelector);\n    const actions = createSliceActions(name, sliceActionNameGetter, reducers, reducersToActions);\n    const reducer = createSliceReducer(initialState, actions, reducers, extraReducers);\n    return {\n        name,\n        reducer,\n        actions,\n        selectors: {\n            [`select${classify(name)}State`]: featureSelector,\n            ...nestedSelectors,\n        },\n    };\n}\nfunction createNamespacedSlice({ name, initialState, reducers, extraReducers, reducersToActions, sliceActionNameGetter = defaultSliceActionNameGetter, }) {\n    const { name: sliceName, reducer, selectors, actions, } = createSlice({\n        name,\n        initialState,\n        reducers,\n        extraReducers,\n        reducersToActions,\n        sliceActionNameGetter,\n    });\n    const classifiedName = classify(name);\n    return {\n        [`${classifiedName}Feature`]: {\n            name: sliceName,\n            reducer,\n        },\n        [`${classifiedName}Actions`]: actions,\n        [`${classifiedName}Selectors`]: selectors,\n    };\n}\n\n/*\n * Public API Surface of ngrx-slice\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { createNamespacedSlice, createSlice, noopReducer };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}