import { produce, isDraft } from 'immer';
export function createSingleArgumentStateOperator(mutator) {
    const operator = createStateOperator((_, state) => mutator(state));
    return function operation(state) {
        return operator(state, undefined);
    };
}
export function createStateOperator(mutator) {
    return function operation(state, arg) {
        function isPayloadActionArg(arg) {
            return typeof arg === 'object' && arg != null && 'type' in arg;
        }
        const runMutator = (draft) => {
            if (isPayloadActionArg(arg)) {
                const { type: _removedType, _payload: _removedPayload, ...rest } = arg;
                if (Object.keys(rest).length > 1) {
                    mutator(rest, draft);
                }
                else {
                    mutator(Object.values(rest).pop(), draft);
                }
            }
            else {
                mutator(arg, draft);
            }
        };
        if (isDraft(state)) {
            runMutator(state);
            return state;
        }
        return produce(state, runMutator);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGUtYWRhcHRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25ncngtc2xpY2UvZW50aXR5L3NyYy9saWIvc3RhdGUtYWRhcHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE9BQU8sQ0FBQztBQUl6QyxNQUFNLFVBQVUsaUNBQWlDLENBQy9DLE9BQTRDO0lBRTVDLE1BQU0sUUFBUSxHQUFHLG1CQUFtQixDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQXlCLEVBQUUsRUFBRSxDQUNwRSxPQUFPLENBQUMsS0FBSyxDQUFDLENBQ2YsQ0FBQztJQUVGLE9BQU8sU0FBUyxTQUFTLENBQ3ZCLEtBQWdDO1FBRWhDLE9BQU8sUUFBUSxDQUFDLEtBQWUsRUFBRSxTQUFTLENBQVcsQ0FBQztJQUN4RCxDQUFDLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLG1CQUFtQixDQUNqQyxPQUF1RDtJQUV2RCxPQUFPLFNBQVMsU0FBUyxDQUN2QixLQUFhLEVBQ2IsR0FBeUI7UUFFekIsU0FBUyxrQkFBa0IsQ0FDekIsR0FBeUI7WUFFekIsT0FBTyxPQUFPLEdBQUcsS0FBSyxRQUFRLElBQUksR0FBRyxJQUFJLElBQUksSUFBSSxNQUFNLElBQUksR0FBRyxDQUFDO1FBQ2pFLENBQUM7UUFFRCxNQUFNLFVBQVUsR0FBRyxDQUFDLEtBQXlCLEVBQUUsRUFBRTtZQUMvQyxJQUFJLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxFQUFFO2dCQUMzQixNQUFNLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsZUFBZSxFQUFFLEdBQUcsSUFBSSxFQUFFLEdBQUcsR0FBRyxDQUFDO2dCQUN2RSxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtvQkFDaEMsT0FBTyxDQUFDLElBQVksRUFBRSxLQUFLLENBQUMsQ0FBQztpQkFDOUI7cUJBQU07b0JBQ0wsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7aUJBQzNDO2FBQ0Y7aUJBQU07Z0JBQ0wsT0FBTyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQzthQUNyQjtRQUNILENBQUMsQ0FBQztRQUVGLElBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ2xCLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNsQixPQUFPLEtBQUssQ0FBQztTQUNkO1FBRUQsT0FBTyxPQUFPLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQ3BDLENBQUMsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwcm9kdWNlLCBpc0RyYWZ0IH0gZnJvbSAnaW1tZXInO1xuaW1wb3J0IHR5cGUgeyBQYXlsb2FkQWN0aW9uIH0gZnJvbSAnbmdyeC1zbGljZSc7XG5pbXBvcnQgdHlwZSB7IEVudGl0eVN0YXRlLCBQcmV2ZW50QW55IH0gZnJvbSAnLi90eXBpbmdzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNpbmdsZUFyZ3VtZW50U3RhdGVPcGVyYXRvcjxURGF0YT4oXG4gIG11dGF0b3I6IChzdGF0ZTogRW50aXR5U3RhdGU8VERhdGE+KSA9PiB2b2lkXG4pIHtcbiAgY29uc3Qgb3BlcmF0b3IgPSBjcmVhdGVTdGF0ZU9wZXJhdG9yKChfLCBzdGF0ZTogRW50aXR5U3RhdGU8VERhdGE+KSA9PlxuICAgIG11dGF0b3Ioc3RhdGUpXG4gICk7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIG9wZXJhdGlvbjxUU3RhdGUgZXh0ZW5kcyBFbnRpdHlTdGF0ZTxURGF0YT4+KFxuICAgIHN0YXRlOiBQcmV2ZW50QW55PFRTdGF0ZSwgVERhdGE+XG4gICk6IFRTdGF0ZSB7XG4gICAgcmV0dXJuIG9wZXJhdG9yKHN0YXRlIGFzIFRTdGF0ZSwgdW5kZWZpbmVkKSBhcyBUU3RhdGU7XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdGF0ZU9wZXJhdG9yPFREYXRhLCBUQXJnPihcbiAgbXV0YXRvcjogKGFyZzogVEFyZywgc3RhdGU6IEVudGl0eVN0YXRlPFREYXRhPikgPT4gdm9pZFxuKSB7XG4gIHJldHVybiBmdW5jdGlvbiBvcGVyYXRpb248VFN0YXRlIGV4dGVuZHMgRW50aXR5U3RhdGU8VERhdGE+PihcbiAgICBzdGF0ZTogVFN0YXRlLFxuICAgIGFyZzogVEFyZyB8IFBheWxvYWRBY3Rpb25cbiAgKSB7XG4gICAgZnVuY3Rpb24gaXNQYXlsb2FkQWN0aW9uQXJnKFxuICAgICAgYXJnOiBUQXJnIHwgUGF5bG9hZEFjdGlvblxuICAgICk6IGFyZyBpcyBQYXlsb2FkQWN0aW9uIHtcbiAgICAgIHJldHVybiB0eXBlb2YgYXJnID09PSAnb2JqZWN0JyAmJiBhcmcgIT0gbnVsbCAmJiAndHlwZScgaW4gYXJnO1xuICAgIH1cblxuICAgIGNvbnN0IHJ1bk11dGF0b3IgPSAoZHJhZnQ6IEVudGl0eVN0YXRlPFREYXRhPikgPT4ge1xuICAgICAgaWYgKGlzUGF5bG9hZEFjdGlvbkFyZyhhcmcpKSB7XG4gICAgICAgIGNvbnN0IHsgdHlwZTogX3JlbW92ZWRUeXBlLCBfcGF5bG9hZDogX3JlbW92ZWRQYXlsb2FkLCAuLi5yZXN0IH0gPSBhcmc7XG4gICAgICAgIGlmIChPYmplY3Qua2V5cyhyZXN0KS5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgbXV0YXRvcihyZXN0IGFzIFRBcmcsIGRyYWZ0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBtdXRhdG9yKE9iamVjdC52YWx1ZXMocmVzdCkucG9wKCksIGRyYWZ0KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbXV0YXRvcihhcmcsIGRyYWZ0KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgaWYgKGlzRHJhZnQoc3RhdGUpKSB7XG4gICAgICBydW5NdXRhdG9yKHN0YXRlKTtcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gcHJvZHVjZShzdGF0ZSwgcnVuTXV0YXRvcik7XG4gIH07XG59XG4iXX0=